{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","router.min.js","src/router.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Router","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","routes","path","has","route","Object","defineProperty","value","hasOwnProperty","paramRe","prototype","callback","lastIndex","regexp","match","exec","replace","push","RegExp","dispatch","matches","arguments","undefined","location","pathname","len","apply","slice"],"mappings":";CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,OAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCEA,YCcA,SAASS,GAAOiB,GACZ,KAAMlB,eAAgBC,IAClB,MAAO,IAAIA,GAAOiB,EAGtB,IADAlB,KAAKkB,UACDA,EACA,IAAK,GAAMC,KAAQD,GACXE,EAAIL,KAAKG,EAAQC,IACjBnB,KAAKqB,MAAMF,EAAMD,EAAOC,IDpBxCG,OAAOC,eAAe/B,EAAS,cAC3BgC,OAAO,GCFX,IAAMJ,MAASK,eACTC,EAAU,eA0ChBzB,GAAO0B,UAAUN,MAAQ,SAAeF,EAAMS,GAC1CF,EAAQG,UAAY,CAEpB,KADA,GAAIC,GAASX,EAAO,GAAIY,EAAA,OAChBA,EAAQL,EAAQM,KAAKb,IACzBW,EAASA,EAAOG,QAAQF,EAAM,GAAI,cAGtC,OADA/B,MAAKkB,OAAOgB,MAAMJ,OAAQ,GAAIK,QAAO,IAAML,EAAS,KAAMF,SAAAA,IACnD5B,MAYXC,EAAO0B,UAAUS,SAAW,WACxB,IAAK,GAAqCf,GAAOgB,EADPlB,EAAiCmB,UAAAtB,QAAA,GAAAuB,SAAAD,UAAA,GAA1BzC,OAAO2C,SAASC,SAAUH,UAAA,GAClE3B,EAAI,EAAG+B,EAAM1C,KAAKkB,OAAOF,OAAwBL,EAAI+B,EAAK/B,IAG/D,GAFAU,EAAQrB,KAAKkB,OAAOP,GACpB0B,EAAUhB,EAAMS,OAAOE,KAAKb,GACxBkB,GAAWA,EAAQ,GAEnB,MADAhB,GAAMO,SAASe,MAAM,KAAMN,EAAQO,MAAM,IAClC5C,IAGf,OAAOA,ODgBXR,EAAAA,WCVeS,EDWfR,EAAOD,QAAUA,EAAQ,qBAEd,IAAI","file":"router.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*! Router v2.0.0 | https://github.com/ryanmorr/router */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Router = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\r\n * Common variables\r\n */\nvar has = {}.hasOwnProperty;\nvar paramRe = /:([^\\/.\\\\]+)/g;\n\n/**\r\n * Create a new 'Router' instance with or\r\n * without the new operator. Optionally pass\r\n * an object of routes that map the path to\r\n * the callback function\r\n *\r\n * @constructor\r\n * @param {Object} routes (optional)\r\n * @api public\r\n */\nfunction Router(routes) {\n    if (!(this instanceof Router)) {\n        return new Router(routes);\n    }\n    this.routes = [];\n    if (routes) {\n        for (var path in routes) {\n            if (has.call(routes, path)) {\n                this.route(path, routes[path]);\n            }\n        }\n    }\n}\n\n/**\r\n * Add a new route to the router with a path\r\n * which may or may not contain embedded\r\n * parameters from which to extract from\r\n * a matching URL and pass to the provided\r\n * callback function:\r\n *\r\n * Router().route('/foo/:bar', function(bar){\r\n *\r\n * });\r\n *\r\n * @param {String} path\r\n * @param {Function} callback\r\n * @return {Router}\r\n * @api public\r\n */\nRouter.prototype.route = function route(path, callback) {\n    paramRe.lastIndex = 0;\n    var regexp = path + '',\n        match = void 0;\n    while (match = paramRe.exec(path)) {\n        regexp = regexp.replace(match[0], '([^/\\\\\\\\]+)');\n    }\n    this.routes.push({ regexp: new RegExp('^' + regexp + '$'), callback: callback });\n    return this;\n};\n\n/**\r\n * Test a URL against all the routes and invoke\r\n * the callback function of the first matching\r\n * pattern, passing all if any parameters\r\n *\r\n * @param {String} path (optional)\r\n * @return {Router}\r\n * @api public\r\n */\nRouter.prototype.dispatch = function dispatch() {\n    var path = arguments.length <= 0 || arguments[0] === undefined ? window.location.pathname : arguments[0];\n\n    for (var i = 0, len = this.routes.length, route, matches; i < len; i++) {\n        route = this.routes[i];\n        matches = route.regexp.exec(path);\n        if (matches && matches[0]) {\n            route.callback.apply(null, matches.slice(1));\n            return this;\n        }\n    }\n    return this;\n};\n\n/**\r\n * Export `Router` class\r\n */\nexports.default = Router;\nmodule.exports = exports['default'];\n\n},{}]},{},[1])(1)\n});\n\n","/**\r\n * Common variables\r\n */\r\nconst has = {}.hasOwnProperty;\r\nconst paramRe = /:([^\\/.\\\\]+)/g;\r\n\r\n/**\r\n * Create a new 'Router' instance with or\r\n * without the new operator. Optionally pass\r\n * an object of routes that map the path to\r\n * the callback function\r\n *\r\n * @constructor\r\n * @param {Object} routes (optional)\r\n * @api public\r\n */\r\nfunction Router(routes) {\r\n    if (!(this instanceof Router)) {\r\n        return new Router(routes);\r\n    }\r\n    this.routes = [];\r\n    if (routes) {\r\n        for (const path in routes) {\r\n            if (has.call(routes, path)) {\r\n                this.route(path, routes[path]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Add a new route to the router with a path\r\n * which may or may not contain embedded\r\n * parameters from which to extract from\r\n * a matching URL and pass to the provided\r\n * callback function:\r\n *\r\n * Router().route('/foo/:bar', function(bar){\r\n *\r\n * });\r\n *\r\n * @param {String} path\r\n * @param {Function} callback\r\n * @return {Router}\r\n * @api public\r\n */\r\nRouter.prototype.route = function route(path, callback) {\r\n    paramRe.lastIndex = 0;\r\n    let regexp = path + '', match;\r\n    while ((match = paramRe.exec(path))) {\r\n        regexp = regexp.replace(match[0], '([^/\\\\\\\\]+)');\r\n    }\r\n    this.routes.push({regexp: new RegExp('^' + regexp + '$'), callback});\r\n    return this;\r\n};\r\n\r\n/**\r\n * Test a URL against all the routes and invoke\r\n * the callback function of the first matching\r\n * pattern, passing all if any parameters\r\n *\r\n * @param {String} path (optional)\r\n * @return {Router}\r\n * @api public\r\n */\r\nRouter.prototype.dispatch = function dispatch(path = window.location.pathname) {\r\n    for (let i = 0, len = this.routes.length, route, matches; i < len; i++) {\r\n        route = this.routes[i];\r\n        matches = route.regexp.exec(path);\r\n        if (matches && matches[0]) {\r\n            route.callback.apply(null, matches.slice(1));\r\n            return this;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Export `Router` class\r\n */\r\nexport default Router;\r\n"],"sourceRoot":"/source/"}